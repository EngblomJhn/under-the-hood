apply plugin: 'com.android.library'
apply plugin: 'jacoco-android'
apply plugin: "com.github.kt3k.coveralls"

android {
    testBuildType "release"
    publishNonDefault false
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionNameLib

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "BUILD_NUMBER", "\"" + getCiBuildNumber() + "\""
    }

    buildTypes {
        debug {

        }
        noop {

        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

/*    libraryVariants.all { variant ->
        variant.outputs.all { output ->
            File outputFile = new File(output.outputFileName)
            output.outputFileName = new File(
                    new File("./"),
                    outputFile.name.replace((".aar"), "-${version}.aar")).absolutePath
        }
    }*/
}
/*
android.variantFilter { variant ->
    if (variant.buildType.name == com.android.builder.core.BuilderConstants.DEBUG) {
        variant.setIgnore(true);
    }
}
*/
dependencies {
    androidTestCompile(group: 'com.android.support.test.espresso', name: 'espresso-core', version: rootProject.ext.dependencies.espresso, {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    implementation "com.android.support:appcompat-v7:$rootProject.ext.dependencies.support"
    implementation "com.android.support:design:$rootProject.ext.dependencies.support"

    api project(path: ':hood-core')

    testCompile "junit:junit:$rootProject.ext.dependencies.junit"
}

apply from: "$rootDir/gradle/publish.gradle"