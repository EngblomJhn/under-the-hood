apply from: "$rootDir/gradle/common-build.gradle"

buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.0.0'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.5'
        classpath 'de.mobilej.unmock:UnMockPlugin:0.6.4'
        classpath "org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.8.3"
        classpath 'com.vanniktech:gradle-android-junit-jacoco-plugin:0.16.0'
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

ext {
    versionNameApp = "0.7.0"
    versionNameLib = "$versionNameApp"
    versionCode = getCiBuildNumber()
    versionNameDep = "0.+"

    compileSdkVersion = 29
    buildToolsVersion = "29.0.3"
    targetSdkVersion = 29
    minSdkVersion = 14
    javaVersion = JavaVersion.VERSION_1_8

    dependencies = [
            androidx: '1.1.0',
            espresso: '3.1.0',
            junit   : '4.13',
            timber  : '4.7.1'
    ]
}

//disables Java8 javadoc lint which is way to restrictive
if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}

//this defines an Android compatible provided scope, see: https://sinking.in/blog/provided-scope-in-gradle/
configurations {
    provided {
        dependencies.all { dep ->
            configurations.default.exclude group: dep.group, module: dep.name
        }
    }
    compile.extendsFrom provided
}

task publishLibs(dependsOn: [':clean', 'hood-core:assemble', ':hood-core:install', ':hood-extended:install', ':hood-core:bintrayUpload']) {
    doLast {
        println "published"
    }
}
